services:
  rabbitmq:
    image: rabbitmq:4-management
    container_name: AuxoniaVault.RabbitMQ
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER:-auxonia}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS:-auxonia}
    networks:
      - auxonia-network

  gateway.webapi:
    image: gateway.webapi
    container_name: AuxoniaVault.GatewayApi
    depends_on:
      - rabbitmq
    build:
      context: .
      dockerfile: src/gateway/Gateway.WebApi/Dockerfile
    ports:
      - "5000:5000"
      - "5001:5001"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=${GATEWAY_URL:-http://+:5000}
    networks:
      - auxonia-network

  auth.database:
    image: postgres:latest
    container_name: AuxoniaVault.AuthDb
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-auxonia}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-auxonia}
      - POSTGRES_DB=${AUTH_DB_NAME:-authdb}
    ports:
      - "5432:5432"
    volumes:
      - authdb-data:/var/lib/postgresql/data
    networks:
      - auxonia-network

  auth.webapi:
    image: auth.webapi
    container_name: AuxoniaVault.AuthApi
    depends_on:
      - auth.database
      - rabbitmq
    build:
      context: .
      dockerfile: src/services/Auth/Auth.WebApi/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=${AUTH_URL:-http://+:5100}
      - ConnectionStrings__DefaultConnection=Host=auth.database;Database=${AUTH_DB_NAME:-authdb};Username=${POSTGRES_USER:-auxonia};Password=${POSTGRES_PASSWORD:-auxonia}
      - Jwt__Secret=${JWT_SECRET:-super-duper-secret-value-that-should-be-in-user-secrets}
      - Jwt__Issuer=${JWT_ISSUER:-AuxoniaVault}
      - Jwt__Audience=${JWT_AUDIENCE:-AuxoniaVaultUsers}
      - Jwt__ExpirationInMinutes=${JWT_EXPIRATION_IN_MINUTES:-10}
      - RabbitMQ__Host=${RABBITMQ_HOST:-rabbitmq}
      - RabbitMQ__Port=${RABBITMQ_PORT:-5672}
      - RabbitMQ__Username=${RABBITMQ_DEFAULT_USER:-auxonia}
      - RabbitMQ__Password=${RABBITMQ_DEFAULT_PASS:-auxonia}
      - AWS__Region=${AWS_REGION:-eu-central-1}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - S3Settings__BucketName=${S3_BUCKET_NAME:-auxoniabucket}
      - S3Settings__RegionName=${S3_REGION_NAME:-eu-central-1}
    networks:
      - auxonia-network

  notifications.webapi:
    image: notifications.webapi
    container_name: AuxoniaVault.NotificationsApi
    depends_on:
      - rabbitmq
    build:
      context: .
      dockerfile: src/services/Notifications/Notifications.WebApi/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=${NOTIFICATIONS_URL:-http://+:5200}
      - RabbitMQ__Host=${RABBITMQ_HOST:-rabbitmq}
      - RabbitMQ__Port=${RABBITMQ_PORT:-5672}
      - RabbitMQ__Username=${RABBITMQ_DEFAULT_USER:-auxonia}
      - RabbitMQ__Password=${RABBITMQ_DEFAULT_PASS:-auxonia}
      - AWS__Region=${AWS_REGION:-eu-central-1}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - S3Settings__BucketName=${S3_BUCKET_NAME:-auxoniabucket}
      - S3Settings__RegionName=${S3_REGION_NAME:-eu-central-1}
      - EmailSettings__SenderEmail=${EMAIL_SENDER_EMAIL:-akaki.jomidavayt@gmail.com}
      - EmailSettings__SenderName=${EMAIL_SENDER_NAME:-AuxoniaVault}
      - EmailSettings__CompanyName=${EMAIL_COMPANY_NAME:-AuxoniaVault}
      - EmailSettings__SupportEmail=${EMAIL_SUPPORT_EMAIL:-support@auxoniavault.com}
      - EmailSettings__WebsiteUrl=${EMAIL_WEBSITE_URL:-https://auxoniavault.com}
      - EmailSettings__TokenExpirationMinutes=${EMAIL_TOKEN_EXPIRATION_MINUTES:-10}
    networks:
      - auxonia-network

  billing.database:
    image: postgres:latest
    container_name: AuxoniaVault.BillingDb
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-auxonia}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-auxonia}
      - POSTGRES_DB=${BILLING_DB_NAME:-billingdb}
    ports:
      - "5433:5432"
    volumes:
      - billingdb-data:/var/lib/postgresql/data
    networks:
      - auxonia-network

  billing.webapi:
    image: billing.webapi
    container_name: AuxoniaVault.BillingApi
    depends_on:
      - billing.database
      - rabbitmq
    build:
      context: .
      dockerfile: src/services/Billing/Billing.WebApi/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=${BILLING_URL:-http://+:5300}
      - ConnectionStrings__DefaultConnection=Host=billing.database;Database=${BILLING_DB_NAME:-billingdb};Username=${POSTGRES_USER:-auxonia};Password=${POSTGRES_PASSWORD:-auxonia}
      - Jwt__Secret=${JWT_SECRET:-super-duper-secret-value-that-should-be-in-user-secrets}
      - Jwt__Issuer=${JWT_ISSUER:-AuxoniaVault}
      - Jwt__Audience=${JWT_AUDIENCE:-AuxoniaVaultUsers}
      - Jwt__ExpirationInMinutes=${JWT_EXPIRATION_IN_MINUTES:-10}
      - RabbitMQ__Host=${RABBITMQ_HOST:-rabbitmq}
      - RabbitMQ__Port=${RABBITMQ_PORT:-5672}
      - RabbitMQ__Username=${RABBITMQ_DEFAULT_USER:-auxonia}
      - RabbitMQ__Password=${RABBITMQ_DEFAULT_PASS:-auxonia}
      - AWS__Region=${AWS_REGION:-eu-central-1}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - S3Settings__BucketName=${S3_BUCKET_NAME:-auxoniabucket}
      - S3Settings__RegionName=${S3_REGION_NAME:-eu-central-1}
      - Stripe__ApiKey=${STRIPE_API_KEY:-sk_test_your_stripe_secret_key}
      - Stripe__SuccessUrl=${STRIPE_SUCCESS_URL:-http://localhost:3000/subscription/success}
      - Stripe__CancelUrl=${STRIPE_CANCEL_URL:-http://localhost:3000/subscription/cancel}
      - Stripe__WebhookSecret=${STRIPE_WEBHOOK_SECRET:-whsec_your_webhook_secret}
      - Stripe__BillingPortalReturnUrl=${STRIPE_BILLING_PORTAL_RETURN_URL:-http://localhost:3000/billing}
    networks:
      - auxonia-network

volumes:
  authdb-data:
    driver: local
  billingdb-data:
    driver: local

networks:
  auxonia-network:
    driver: bridge
